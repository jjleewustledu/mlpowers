CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C    SUBROUTINE PARVAR
C    AUTHOR:         JOANNE MARKHAM
C    DATE:           NOV 1989
C    WRITTEN TO USE WITH THE OPTMAIN PROGRAM WHICH ESTIMATES
C    VALUES OF PARAMETERS FROM PET SCAN DATA
C
C     SUBROUTINE COMPUTES THE VARIANCE MATRIX FOR ESTIMATED PARAMETERS
C
C     VARIANCE MATRIX IS INVERSVE OF FISHER INFORMATION MATRIX
C     FOR REFERENCES SEE:
C
C 1.  DETECTION, ESTIMATION, AND MODULATION THEORY, PART 1,
C     VAN TREES, H. L., JOHN WILEY & SONS, 1968
C 2.  PARAMETER ESTIMATION IN ENGINEERING AND SCIENCE
C     BY JAMES V. BECK AND KENNETH J. ARNOLD,
C     JOHN WILEY & SONS, 1977
C
C
C     ASSUMPTION IS THAT THE ESTIMATES ARE GAUSSIAN DISTRIBUTED AND
C     THAT THE OPTIMAL SOLUTION HAS BEEN REACHED
C
C     SUBROUTINES CALLED:
C                 SVDINV  -- MATRIX INVERSION SUBROUTINE
C                 FUNC  -- FUNCTION EVALUATION SUBROUTINE
C
C    PERFORM  MATRIX INVERSION IN DOUBLE PRECISION
C
C     SUBROUTINE ARGUMENTS:
C
C
C      NBLD     -    NUMBER OF DATA VALUES FOR BLOOD CURVE
C      NPOINT   -    NUMBER OF POINTS IN TISSUE CURVES (SCAN DATA)
C      NPBLOCK  -    NUMBER OF PARAMETERS USED FOR COMPUTING
C                    EXPECTED FUNCTION
C      NPARM    -    NUMBER OF VARIABLE PARAMETERS
C      PBNAME   -    IDENTIFICATION FOR PARAMETERS
C      N2PRINT  -    PRINT CODE
C      TB       -    ARRAY OF TIME VALUES FOR BLOOD CURVE
C      BLD      -    BLOOD SAMPLES AT TIMES (TB)
C      TIME1    -    ARRAY OF START TIMES FOR SCANS
C      TIME2    -    ARRAY OF STOP TIMES FOR SCANS
C      PBLOCK   -    ARRAY OF VALUES FOR FIXED AND VARIABLE PARAMETERS
C      IOPARM   -    CONTAIN INDEXES FOR LOCATION IN PBLOCK OF
C                    VARIABLE PARAMETERS
C      PARM     -    ARRAY CONTAINING VALUES OF VARIABLE PARAMETERS
C      TISACT   -    OBSERVED DATA
C      TISSUE   -    EXPECTED VALUE OF TISSUE ACTIVITIES FOR
C      WEIGHTS  -    WEIGHTS FOR WEIGHTED SS
C                    SOLUTION PARAMETER VALUES
C      RMSE     -    ROOT-MEAN-SQUARE ERROR AT SOLUTION
C
       SUBROUTINE PARVAR (NBLD, NPOINT, NPBLOCK, NPARM, PBNAME,
     1N2PRINT, TB, BLD, TIME1, TIME2, PBLOCK, IOPARM, PARM,
     2TISACT,TISSUE, WEIGHTS,RMSENW)
       double precision diag(10),BMAT(10,10)
       DOUBLE PRECISION VMAT(10,10),DET,TEMPD,DD,dact(100),dact1(100)
       INTEGER*4  NBLD,NPOINT, NPBLOCK, NPARM, N2PRINT, IOPARM(6)
       INTEGER*4 LWORK(10),MWORK(10)
C
C    LWORK  & MWORK ARE WORK SPACES REQUIRED BY THE MATRIX INVERSION
C    ROUTINE
C
       REAL TB(NBLD), BLD(NBLD), TIME1(100),TIME2(100),PBLOCK(20),
     1PARM(6),TISACT(NPOINT),TISSUE(NPOINT),RMSENW,PB(20)
       REAL TIS(100),PF(10,100),PP(10),SD(10),TEMPT(100)
       REAL WEIGHTS(100)
C
C      DACT & DACT1   -   STORAGE FOR EXPECTED TISSUE VALUES --USED 
c                         COMPUTING      DERATIVES
C      PF(I,J) -   JACOBIAN MATRIX OF PARTIAL DERIVATIVE OF FUNCTION
C                WITH RESPECT TO PARAMETER I AT POINT J
C      VMAT   -   CONTAINS FISHER INFORMATION MATRIX FIRST,
C                 INVERSE OR VARIANCE MATRIX IS COMPUTED IN PLACE
C      SD     -   STANDARD DEVIATION OF PARAMETER ESTIMATES
C      TEMPT  -   DUMMY ARRAY REQUIRED BY FUNC
C      diag   -   array of scale factors for matrix
C
       CHARACTER *30 PBNAME(20)
       data luerr,luout/6,6/
       DO 10 I=1,20
 10    PB(I) = PBLOCK(I)
       DO 20 I=1,NPARM
 20    PP(I) = PARM(I)
C
C    COMPUTE SUM OF SQUARES AND RMSE FOR WEIGHTED DATA
C
C
         SUMS =0.
         DO 25 I=1,NPOINT
         SUMS = SUMS + WEIGHTS(I)*(TISSUE(I)-TISACT(I))**2
 25       CONTINUE
           FN = NPOINT - NPARM
           RMSE = SQRT(SUMS/FN)
 1082   FORMAT (/' WEIGHTED SUM-OF-SQUARES & RMSE ',2F20.3)
C
C    COMPUTE VALUE OF FUNCTION FOR SMALL CHANGE IN PARAMETER
C    AND COMPUTE DERIVATIVE
C
C
       call func (nbld,npoint, npblock,nparm,pbname,
     1n2print,tb,bld,time1,time2,pb,ioparm,pp,
     2dact,tempt)
       DO 100 IP = 1,NPARM
       DEL = PARM(IP)/50.
       IF (DEL.lt.2.0E-5) DEL = 2.0E-5
       PP(IP) = PARM(IP) + DEL
       CALL FUNC (NBLD, NPOINT, NPBLOCK, NPARM, PBNAME,
     1N2PRINT, TB, BLD, TIME1, TIME2, PB, IOPARM, PP,
     2dact1, TEMPT)
        DO 50 J=1,NPOINT
 50     PF(IP,J) = (dact1(J)-dact(J))/DEL
        PP(IP) = PARM(IP)
 100    CONTINUE
C
C
C   COMPUTE MATRIX
C   PF(TRANSPOSE) X PF
C
       DO 200 IP = 1,NPARM
       DO 200 JP = 1,NPARM
       TEMPD =0.
       DO 150 I=1,NPOINT
       DD = PF(IP,I)*PF(JP,I)*WEIGHTS(I)
 150   TEMPD = TEMPD + DD
       VMAT(IP,JP)=TEMPD
 200   CONTINUE
C      WRITE (luout,*)'VMAT', VMAT(1,1),VMAT(2,1),VMAT(1,2),VMAT(2,2)
  
c	write (6,*) ' VMAT - before check for small no '
c       write (6,1231)(vmat(1,j),j=1,5) 
c	write (6,1231)(vmat(2,j),j=1,5) 
c	write (6,1231)(vmat(3,j),j=1,5) 
        do 160 i=1,nparm
	do 160 j=1,nparm
        if (abs(vmat(i,j)).gt.1.0d-30) go to 160
        if (vmat(i,j).ge.0.)then
        vmat(i,j) = 1.0D-30
        else
        vmat(i,j) = - 1.0D-30
        endif

160     continue


c      write (6,*) ' VMAT - after  check for small no '
c	    write (6,1231)(vmat(1,j),j=1,5) 
c	      write (6,1231)(vmat(2,j),j=1,5) 
c	      write (6,1231)(vmat(3,j),j=1,5)
c
c
c     scale matrix
c
             do 202 i=1,nparm
 202         diag(i) = 1.0/sqrt(vmat(i,i))
             do 204 i=1,nparm
	     do 204 j=1,nparm
 204	     vmat(i,j) = vmat(i,j)*diag(i)*diag(j)
             do 205 i=1,nparm
205	     write (6,1231) (vmat(i,j),j=1,3)
1231   format (5e16.5)
c
C
C
C   INVERT MATRIX
C
       CALL svdinv (NPARM,VMAT,BMAT,det )

c
c   scale inverse
c
	   do 206 i=1,nparm
	   do 206 j=1,nparm
 206       vmat(i,j) = bmat(i,j)*diag(i)*diag(j)
	    
	    IF (DET.EQ.0.) WRITE (LUerr,1207)
        WRITE (luout,*) ' DETERMINANT OF FI MATRIX ',DET
 1207  FORMAT (' DET = 0. ')
C
C   COMPUTE SD OF PARAMETERS C
C    MULTIPLICATION BY RMSE CORRECTS FOR DISCREPANCIES BETWEEN
C    DATA AND EXPECTED FUNCTION
C
C
        WRITE (11,1070)
        DO 250 I=1,NPARM
        SD(I) = DSQRT(VMAT(I,I))
        SDD= RMSE*SD(I)
        IF (PARM(I).NE.0.) THEN
        RATIO =100.* SDD/PARM(I)
        ELSE
        RATIO =0.
        ENDIF
        WRITE (11,1071) PARM(I),SDD, RATIO
 250    CONTINUE
 1070  FORMAT (//' ',T12,'PARAMETER',T35,'SD',T46,'F D(%)')
 1071  FORMAT (2E20.6,F10.3)
 1077  FORMAT (//,T20,'CORRELATION MATRIX',//' COLUMN ',10I6)
 1079  FORMAT (' ROW',I3,2X,10F6.2)
       WRITE (11,1077)(i,i=1,nparm)
	write (11,*)
C
C     COMPUTE AND WRITE CORRELATION COEFFICIENT MATRIX
C
       DO 350 I=1,NPARM
       TEMP = SD(I)
       DO 300 J=1,NPARM
 300   VMAT(I,J)=VMAT(I,J)/(TEMP*SD(J))
       WRITE (11,1079) I,(VMAT(I,J),J=1,NPARM)
 350   CONTINUE
C          WRITE (11,1082)SUMS,RMSE
       RETURN
        END
